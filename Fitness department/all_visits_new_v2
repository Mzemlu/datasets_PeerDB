WITH list AS (
    SELECT
        vh.id AS id,
        vh.club_id AS club_id,
        vh.club_name AS club_name,
        vh.user_id,
        vh.in_date AS in_date,
        vh.out_date AS out_date,
        vh.event_type
    FROM ddxfitness_prod_v2.pg_temp_all_table_club_visits AS vh
    INNER JOIN (
        SELECT
            user_id,
            signed_date + toIntervalHour(6) AS signed_date,
            multiIf(
                (end_date IS NULL) AND (status IN ('Current', 'Freezed', 'NotStarted', 'PaymentPending')),
                CAST('2099-12-31', 'date'),
                end_date + toIntervalHour(6)
            ) AS end_date
        FROM ddxfitness_prod_v2.pg_user_payment_plans
        WHERE payment_plan_id NOT IN (1, 111, 152, 161)
          AND status != 'Deleted'
    ) AS upp ON vh.user_id = upp.user_id
    WHERE CAST(vh.in_date, 'date') >= '2023-01-01'
      AND vh.in_date BETWEEN upp.signed_date AND upp.end_date
    GROUP BY 1,2,3,4,5,6,7
),
visits AS (
    SELECT
        t1.id,
        t1.club_id,
        t1.club_name,
        t1.user_id,
        t1.in_date,
        t1.out_date,
        t1.event_type,
        multiIf(
            CAST(t1.in_date, 'date') = CAST(t1.out_date - toIntervalHour(3), 'date'),
            1,
            0
        ) AS is_visit
    FROM list AS t1
    WHERE is_visit = 1
),
final_table AS (
    SELECT
        t1.booking_id,
        t1.timetable_id,
        t1.count_seats,
        t1.club_zone AS club_zone,
        t1.employee_id,
        t1.group_training_id,
        t1.group_name,
        t1.category_name,
        t1.club_name,
        t1.start_time,
        t1.end_time,
        t2.in_date,
        t2.out_date,
        coalesce(t1.last_name, t1.name) AS last_name,
        t1.name,
        t1.user_id,
        t1.phone,
        t1.booking_status,
        t1.booking_date,
        t1.updating_date,
        multiIf(
            (t1.start_time >= (t2.in_date + toIntervalMinute(1))) AND
            (t1.end_time <= (t2.out_date + toIntervalMinute(1))),
            'Yes',
            'No'
        ) AS is_visit
    FROM ddxfitness_prod_v2.bi_training_list AS t1
    LEFT JOIN visits AS t2
        ON t1.user_id = t2.user_id AND CAST(t1.start_time, 'date') = CAST(t2.in_date, 'date')
    WHERE t1.start_time >= (t2.in_date + toIntervalMinute(1))
      AND t1.end_time <= (t2.out_date + toIntervalMinute(1))
),
booking_result AS (
    SELECT
        t1.*,
        is_visit,
        multiIf((is_visit = '') AND (booking_status = 'booked'), 1, 0) AS is_visit_no,
        multiIf(booking_status = 'wait_list', 1, 0) AS is_visit_waiting,
        multiIf(booking_status = 'cancelled', 1, 0) AS is_visit_cancel,
        multiIf((is_visit = 'Yes') AND (booking_status = 'booked'), 1, 0) AS is_visit_yes
    FROM ddxfitness_prod_v2.bi_training_list AS t1
    LEFT JOIN final_table AS t2 ON t1.booking_id = t2.booking_id
),
fin AS (
    SELECT *,
        multiIf(
            (is_visit = 'Yes') AND (booking_status = 'booked'), 'Yes',
            booking_status = 'waiting_list', 'waiting_list',
            booking_status = 'cancelled', 'cancelled',
            'No'
        ) AS is_visit_calc
    FROM booking_result
)
SELECT * FROM fin;
