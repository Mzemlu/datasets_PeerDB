-- select tp.id,
--         tp.transaction_id, 
--         tp.discount_id,
--         d.name as discount_name,
--         tp.product_id, 
--         tp.product_name, 
--         tp.quantity as quantity ,
--         --case when tr.type = 'refund' then tp.quantity * (-1) else tp.quantity end as quantity, 
--         sum(tp.quantity) over (partition by (tr.updated_at+interval '3' hour)::date, product_id order by (tr.updated_at+interval '3' hour)::date) last_qty,
--         tp.price, 
--         tp.total_amount as amount,
--         --case when tr.type = 'refund' then tp.total_amount * (-1) else tp.total_amount end as amount,
--         tr.type, 
--         tr.user_id, 
--         u.email, 
--         u.name name,
--         u.last_name,
--         u.phone,
--         (tr.updated_at+interval '3' hour)::date date, 
--         case when t.if_employee is null then 'Клиент' else  t.if_employee end if_employee,
--         c.name as club_name
-- from ddxfitness_prod_v2.transaction_products tp
-- left join ddxfitness_prod_v2.transactions tr 
--   on tp.transaction_id=tr.id
-- left join ddxfitness_prod_v2.pg_club_legal_infos cli
--   on tr.club_legal_info_id = cli.id
-- left join ddxfitness_prod_v2.pg_clubs c 
--   on cli.club_id = c.id
-- left join ddxfitness_prod_v2.pg_users u
--   on tr.user_id = u.id
-- left join ddxfitness_prod_v2.pg_discounts d
--   on tp.discount_id = d.id
-- left join 
--   (select user_id,
--           case when payment_plan_id in (1,111,152) then 'Сотрудник' else 'Клиент' end if_employee
--    from ddxfitness_prod_v2.pg_user_payment_plans upp 
--    where status not in ('Ended','Created','Deleted','Refunded','NonStarted')
--      and payment_plan_id in (
--         1,111,161,152,10,18,19,20,21,22,28,35,45,46,49,70,71,73,74,76,
--         92,93,118,135,140,162,241,242,243,244,245,246,277,278
--      )
--    group by 1,2
--   ) t
--   on tr.user_id = t.user_id
-- where product_id in (300, 301)
--   and tr.updated_at > '2025-1-1' /*пока что смотрим только на фест 2025*/
;

SELECT * FROM ddxfitness_prod_v2.bi_ddx_fest bdf 
WHERE date >= '2025-01-01';
