SELECT 
    date_month_for_filter,
    club_name,
    quantile(0.5)(freeze_duration) AS perc
FROM (
    SELECT *
    FROM (
        SELECT 
            upperUTF8(formatDateTime(uf.start_date, '%b-%Y')) AS date_month_for_filter,
            dateDiff('day', uf.start_date, uf.planed_end_date) AS freeze_duration,
            CASE
                WHEN uf.is_technical = 1 THEN 'Техническая'
                WHEN uf.source IN ('mobile_app_avi', 'mobile_app') THEN 'Клиент из мобильного приложения'
                WHEN uf.source = 'crm' AND t.employee_id IN (
                    3344, 2386, 2397, 3286, 2803, 2338, 3343, 2026, 3492, 3496, 3517, 3536
                ) THEN 'Пролонгация'
                WHEN uf.source = 'crm' THEN 'СМ'
                ELSE '0'
            END AS apply_type,
            toMonth(uf.start_date) AS freeze_month,
            toDate(uf.start_date) AS start_date,
            c.name AS club_name,
            pp.name AS payment_plan,
            t.id AS t_id,
            t.user_id,
            upp.payment_plan_id AS pp_id,
            ifNull(u.sex, 'не указан') AS sex,
            up.refunded_transaction_id
        FROM ddxfitness_prod_v2.pg_user_freezes uf
        LEFT JOIN ddxfitness_prod_v2.pg_transactions t ON t.id = uf.transaction_id
        LEFT JOIN ddxfitness_prod_v2.pg_user_payment_plans upp ON upp.id = uf.user_payment_plan_id
        LEFT JOIN ddxfitness_prod_v2.pg_clubs c ON c.id = upp.club_id
        LEFT JOIN ddxfitness_prod_v2.pg_transaction_gates tg ON tg.id = t.gate_id
        LEFT JOIN ddxfitness_prod_v2.pg_transaction_products tp ON tp.transaction_id = t.id
        LEFT JOIN ddxfitness_prod_v2.pg_payment_plans pp ON pp.id = upp.payment_plan_id
        LEFT JOIN ddxfitness_prod_v2.pg_employees e ON e.id = t.employee_id
        LEFT JOIN ddxfitness_prod_v2.pg_users u ON u.id = upp.user_id
        LEFT JOIN (
            SELECT 
                transaction_id,
                refunded_transaction_id
            FROM ddxfitness_prod_v2.pg_user_purchases
            WHERE refunded_transaction_id IS NOT NULL
            GROUP BY 1, 2
        ) up ON up.transaction_id = uf.transaction_id
        WHERE toDate(uf.start_date + INTERVAL 3 HOUR) >= '2023-01-01'
          AND uf.status NOT IN ('PaymentFailed', 'PaymentPending')
          AND t.status = 'completed'
    ) t
    WHERE refunded_transaction_id IS NULL

    UNION ALL

    SELECT *
    FROM (
        SELECT 
            upperUTF8(formatDateTime(uf.start_date, '%b-%Y')) AS date_month_for_filter,
            dateDiff('day', uf.start_date, uf.planed_end_date) AS freeze_duration,
            'Техническая' AS apply_type,
            toMonth(uf.start_date) AS freeze_month,
            toDate(uf.start_date) AS start_date,
            c.name AS club_name,
            pp.name AS payment_plan,
            0 AS t_id,
            0 AS user_id,
            upp.payment_plan_id AS pp_id,
            ifNull(u.sex, 'не указан') AS sex,
            0 AS refunded_transaction_id
        FROM ddxfitness_prod_v2.pg_user_freezes uf
        LEFT JOIN ddxfitness_prod_v2.pg_user_payment_plans upp ON upp.id = uf.user_payment_plan_id
        LEFT JOIN ddxfitness_prod_v2.pg_clubs c ON c.id = upp.club_id
        LEFT JOIN ddxfitness_prod_v2.pg_payment_plans pp ON pp.id = upp.payment_plan_id
        LEFT JOIN ddxfitness_prod_v2.pg_users u ON u.id = upp.user_id
        WHERE toDate(uf.start_date + INTERVAL 3 HOUR) >= '2022-01-01' 
          AND toDate(uf.start_date + INTERVAL 3 HOUR) < '2023-01-01'
          AND uf.status NOT IN ('PaymentFailed', 'PaymentPending')
    ) t
) t2
GROUP BY 
    date_month_for_filter,
    club_name;
