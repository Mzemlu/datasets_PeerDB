SELECT 
    user_id,
    sex,
    payment_plan,
    freeze_date AS date_month_for_filter,
    club_name,
    CASE WHEN num_freezes > 1 THEN 1 ELSE 0 END AS many_freezes,
    CASE WHEN num_freezes = 1 THEN 1 ELSE 0 END AS one_freezes,
    num_freezes
FROM (		
    SELECT 
        freeze_date, 
        user_id, 
        sex,
        payment_plan,
        club_name, 
        COUNT(DISTINCT t_id) AS num_freezes 
    FROM ( 
        SELECT * FROM (
            SELECT 
                CASE
                    WHEN uf.is_technical = TRUE THEN 'Техническая'
                    WHEN uf.source IN ('mobile_app_avi', 'mobile_app') THEN 'Клиент из мобильного приложения'
                    WHEN uf.source = 'crm' AND t.employee_id IN (
                        3344, 2386, 2397, 3286, 2803, 2338, 3343, 2026, 3492, 3496, 3517, 3536
                    ) THEN 'Пролонгация'
                    WHEN uf.source = 'crm' THEN 'СМ'
                    ELSE '0'
                END AS apply_type,
                to_char(uf.start_date, 'MON-YYYY') AS freeze_date,
                uf.start_date::date AS start_date,
                c.name AS club_name,
                pp.name AS payment_plan,
                t.id AS t_id,
                t.user_id,
                upp.payment_plan_id AS pp_id,
                coalesce(u.sex, 'не указан') AS sex,
                up.refunded_transaction_id
            FROM ddxfitness_prod_v2.pg_user_freezes uf
            LEFT JOIN ddxfitness_prod_v2.pg_transactions t ON t.id = uf.transaction_id
            LEFT JOIN ddxfitness_prod_v2.pg_user_payment_plans upp ON upp.id = uf.user_payment_plan_id
            LEFT JOIN ddxfitness_prod_v2.pg_clubs c ON c.id = upp.club_id
            LEFT JOIN ddxfitness_prod_v2.pg_transaction_gates tg ON tg.id = t.gate_id
            LEFT JOIN ddxfitness_prod_v2.pg_transaction_products tp ON tp.transaction_id = t.id
            LEFT JOIN ddxfitness_prod_v2.pg_payment_plans pp ON pp.id = upp.payment_plan_id
            LEFT JOIN ddxfitness_prod_v2.pg_employees e ON e.id = t.employee_id
            LEFT JOIN ddxfitness_prod_v2.pg_users u ON u.id = upp.user_id
            LEFT JOIN (
                SELECT 
                    transaction_id,
                    refunded_transaction_id
                FROM ddxfitness_prod_v2.pg_user_purchases
                WHERE refunded_transaction_id IS NOT NULL
                GROUP BY 1,2
            ) up ON up.transaction_id = uf.transaction_id
            WHERE uf.start_date >= '2023-01-01'
              AND uf.status NOT IN ('PaymentFailed','PaymentPending')
              AND t.status = 'completed'
        ) t
        WHERE refunded_transaction_id IS NULL

        UNION ALL

        SELECT 
            'Техническая' AS apply_type,
            to_char(uf.start_date, 'MON-YYYY') AS freeze_date,
            uf.start_date::date AS start_date,
            c.name AS club_name,
            pp.name AS payment_plan,
            uf.id AS t_id,
            upp.user_id AS user_id,
            upp.payment_plan_id AS pp_id,
            coalesce(u.sex, 'не указан') AS sex,
            0 AS refunded_transaction_id
        FROM ddxfitness_prod_v2.pg_user_freezes uf
        LEFT JOIN ddxfitness_prod_v2.pg_user_payment_plans upp ON upp.id = uf.user_payment_plan_id
        LEFT JOIN ddxfitness_prod_v2.pg_clubs c ON c.id = upp.club_id
        LEFT JOIN ddxfitness_prod_v2.pg_payment_plans pp ON pp.id = upp.payment_plan_id
        LEFT JOIN ddxfitness_prod_v2.pg_users u ON u.id = upp.user_id
        WHERE uf.start_date >= '2022-01-01'
          AND uf.start_date < '2023-01-01'
          AND uf.status NOT IN ('PaymentFailed','PaymentPending')
    ) t2 
    GROUP BY 1,2,3,4,5
) t3;
