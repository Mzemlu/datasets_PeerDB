with median as (
    SELECT 
        (t.created_at + INTERVAL '3 hour')::date AS date,
        user_payment_plan_id, 
        t.user_id AS user_id,
        c.name AS club_name,
        CASE 
            WHEN t.provider_id IN (1,2,5,6,7,9,10,12,13,16,17,24,25,26,27,28,29,30,31,34,37,38) THEN t.total_amount
            WHEN t.provider_id IN (8,11,14,15) THEN t.total_amount * -1
            WHEN provider_id IN (3,4) THEN 0
        END AS total_amount,
        CASE 
            WHEN t.provider_id IN (1,2,5,6,7,9,10,12,13,16,17,24,25,26,27,28,29,30,31,34,37,38) THEN t.join_fee
            WHEN provider_id IN (3,4) THEN 0
            ELSE t.join_fee * -1
        END AS join_fee,
        CASE 
            WHEN t.provider_id IN (1,2,5,6,7,9,10,12,13,16,17,24,25,26,27,28,29,30,31,34,37,38) THEN t.membership_fee
            WHEN provider_id IN (3,4) THEN 0
            ELSE t.membership_fee * -1
        END AS membership_fee
    FROM ddxfitness_prod_v2.pg_transactions t
    LEFT JOIN ddxfitness_prod_v2.pg_user_payment_plans upp ON upp.id = t.user_payment_plan_id
    LEFT JOIN ddxfitness_prod_v2.pg_club_legal_infos cli ON t.club_legal_info_id = cli.id
    LEFT JOIN ddxfitness_prod_v2.pg_clubs c ON c.id = cli.club_id
    LEFT JOIN ddxfitness_prod_v2.pg_users u ON t.user_id = u.id 
    WHERE t.status = 'completed'  
      AND (t.created_at + INTERVAL '3 hour')::date >= '2023-08-01'
    GROUP BY 1,2,3,4,5,6,7
),

join_fee AS (
    SELECT 
        date, 
        club_name, 
        join_fee 
    FROM median 
    WHERE join_fee <> 0
),

membership_fee AS (
    SELECT 
        date, 
        club_name, 
        membership_fee 
    FROM median 
    WHERE membership_fee <> 0
),

other AS (
    SELECT 
        date, 
        club_name, 
        user_id,
        total_amount - join_fee - membership_fee AS other
    FROM median
    WHERE total_amount - join_fee - membership_fee > 0
)

SELECT 
    date, 
    club_name, 
    sum(join_fee) AS join_fee, 
    sum(membership_fee) AS membership_fee, 
    sum(other) AS other
FROM (
    SELECT 
        date, 
        club_name, 
        median(join_fee) AS join_fee, 
        0 AS membership_fee, 
        0 AS other 
    FROM join_fee 
    GROUP BY 1,2

    UNION ALL 

    SELECT 
        date, 
        club_name, 
        0, 
        median(membership_fee), 
        0 
    FROM membership_fee 
    GROUP BY 1,2

    UNION ALL 

    SELECT 
        date, 
        club_name, 
        0, 
        0, 
        median(other) 
    FROM other 
    GROUP BY 1,2
) t
GROUP BY 1,2;
